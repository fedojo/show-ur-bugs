{"version":3,"file":"view-single.component.spec.js","sourceRoot":"","sources":["view-single.component.spec.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,wBAQO,uBAAuB,CAAC,CAAA;AAE/B,wBAAuD,2BAA2B,CAAC,CAAA;AACnF,qBAA0B,eAAe,CAAC,CAAA;AAC1C,iCAAmB,2BAA2B,CAAC,CAAA;AAC/C,sCAAoC,yBAAyB,CAAC,CAAA;AAE9D,kBAAQ,CAAC,uBAAuB,EAAE;IAChC,IAAI,OAA6B,CAAC;IAElC,6BAAmB,CAAC,cAAM,OAAA,CAAC,2CAAmB,CAAC,EAArB,CAAqB,CAAC,CAAC;IACjD,oBAAU,CAAC,gBAAM,CAAC,CAAC,8BAAoB,CAAC,EAAE,UAAU,GAAyB;QAC3E,OAAO,GAAG,GAAG,CAAC;IAChB,CAAC,CAAC,CAAC,CAAC;IAEJ,YAAE,CAAC,6BAA6B,EAAE,gBAAM,CAAC,CAAC,2CAAmB,CAAC,EAC1D,UAAC,SAA8B;QACjC,gBAAM,CAAC,SAAS,CAAC,CAAC,UAAU,EAAE,CAAC;IACjC,CAAC,CAAC,CAAC,CAAC;IAEJ,mDAAmD;IACnD,4CAA4C;IAC5C,oCAAoC;IACpC,OAAO;IAEP,oBAAU,CAAC;QACT,IAAI,CAAC,GAAG,GAAG,IAAI,2CAAmB,EAAE,CAAC;IACvC,CAAC,CAAC,CAAC;IAEH,YAAE,CAAC,4BAA4B,EAAE;QAC/B,gBAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACrC,CAAC,CAAC,CAAC;IAGH,YAAE,CAAC,6BAA6B,EAAE,gBAAM,CAAC,EAAE,EAAE;QAC3C,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,iCAAiC,CAAC;aAC1D,IAAI,CAAC,UAAC,OAA8B;YACnC,IAAI,KAAK,GAAG,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,qBAAE,CAAC,SAAS,CAAC,2CAAmB,CAAC,CAAC,CAAC;YAC1E,gBAAM,CAAC,KAAK,CAAC,CAAC,UAAU,EAAE,CAAC;YAC3B,gBAAM,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,UAAU,EAAE,CAAC;QAC/C,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC,CAAC;IAEJ,yCAAyC;IACzC,kEAAkE;IAClE,kDAAkD;IAClD,mFAAmF;IACnF,oCAAoC;IACpC,sDAAsD;IACtD,UAAU;IACV,OAAO;IACP,EAAE;IACF,EAAE;IACF,gGAAgG;IAChG,+FAA+F;IAC/F,sDAAsD;IACtD,2DAA2D;IAC3D,wCAAwC;IACxC,+DAA+D;IAC/D,QAAQ;IACR,OAAO;AACT,CAAC,CAAC,CAAC;AASH;IAAA;IACA,CAAC;IARD;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM;YAChB,QAAQ,EAAE,+CAET;YACD,UAAU,EAAE,CAAC,2CAAmB,CAAC;SAClC,CAAC;;yCAAA;IAEF,wCAAC;AAAD,CAAC,AADD,IACC","sourcesContent":["import {\n  beforeEach,\n  beforeEachProviders,\n  describe,\n  expect,\n  it,\n  inject,\n  injectAsync\n} from '@angular/core/testing';\n\nimport { ComponentFixture, TestComponentBuilder } from '@angular/compiler/testing';\nimport { Component } from '@angular/core';\nimport { By } from '@angular/platform-browser';\nimport { ViewSingleComponent } from './view-single.component';\n\ndescribe('Component: ViewSingle', () => {\n  let builder: TestComponentBuilder;\n\n  beforeEachProviders(() => [ViewSingleComponent]);\n  beforeEach(inject([TestComponentBuilder], function (tcb: TestComponentBuilder) {\n    builder = tcb;\n  }));\n\n  it('should inject the component', inject([ViewSingleComponent],\n      (component: ViewSingleComponent) => {\n    expect(component).toBeTruthy();\n  }));\n\n  // it('should have ', inject([ViewSingleComponent],\n  //     (component: ViewSingleComponent) => {\n  //   expect(component).toBeTruthy();\n  // }));\n\n  beforeEach(function() {\n    this.vsc = new ViewSingleComponent();\n  });\n\n  it('should have hello property', function() {\n    expect(this.vsc.id).toBe('router');\n  });\n\n\n  it('should create the component', inject([], () => {\n    return builder.createAsync(ViewSingleComponentTestController)\n      .then((fixture: ComponentFixture<any>) => {\n        let query = fixture.debugElement.query(By.directive(ViewSingleComponent));\n        expect(query).toBeTruthy();\n        expect(query.componentInstance).toBeTruthy();\n      });\n  }));\n\n  // it('should render', inject([], () => {\n  //   return builder.createAsync(ViewSingleComponentTestController)\n  //     .then((fixture: ComponentFixture<any>) => {\n  //       let query = fixture.debugElement.query(By.directive(ViewSingleComponent));\n  //       expect(query).toBeTruthy();\n  //       expect(query.componentInstance).toBeTruthy();\n  //     });\n  // }));\n  //\n  //\n  // it('should render list', injectAsync([TestComponentBuilder], (tcb: TestComponentBuilder) => {\n  //   return tcb.createAsync(ViewSingleComponent).then((componentFixture: ComponentFixture) => {\n  //     const element = componentFixture.nativeElement;\n  //     componentFixture.componentInstance.users = ['John'];\n  //     componentFixture.detectChanges();\n  //     expect(element.querySelectorAll('span').length).toBe(1);\n  //   });\n  // }));\n});\n\n@Component({\n  selector: 'test',\n  template: `\n    <app-view-single></app-view-single>\n  `,\n  directives: [ViewSingleComponent]\n})\nclass ViewSingleComponentTestController {\n}\n\n"]}