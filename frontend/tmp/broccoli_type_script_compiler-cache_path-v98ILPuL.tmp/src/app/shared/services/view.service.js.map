{"version":3,"file":"view.service.js","sourceRoot":"","sources":["view.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAC3C,qBAA8B,eAAe,CAAC,CAAA;AAI9C;IAKE,qBAAmB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAJ7B,YAAO,GAAG,IAAI,cAAO,EAAE,CAAC;QACxB,gBAAW,GAAG,aAAa,CAAC;QAC5B,iBAAY,GAAG,cAAc,CAAC;IAEE,CAAC;IAEzB,iCAAW,GAAnB,UAAoB,UAAU,EAAE,MAAM;QACpC,IAAI,OAAO,GAAG,IAAI,cAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAEnD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;aACxE,GAAG,CAAC,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;IACxC,CAAC;IAED,8BAAQ,GAAR;QACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;IAChD,CAAC;IAED,uCAAiB,GAAjB,UAAkB,EAAE;QAClB,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,GAAC,MAAM,EAAE,EAAC,SAAS,EAAE,EAAE,EAAC,CAAC,CAAC;IACpE,CAAC;IAED,6BAAO,GAAP,UAAQ,KAAK;QACX,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,GAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;IAC5D,CAAC;IAED,gCAAU,GAAV,UAAW,KAAK,EAAE,IAAI;QACpB,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,GAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IAC3D,CAAC;IAED,gCAAU,GAAV,UAAW,EAAE;QACX,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,GAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;IACzD,CAAC;IAED,+BAAS,GAAT;QACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;IAC7C,CAAC;IAED,gCAAU,GAAV,UAAW,EAAE;QACX,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC;IACnD,CAAC;IAED,+BAAS,GAAT,UAAU,EAAE;QACV,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,8BAAQ,GAAR,UAAS,KAAK;QACZ,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,oBAAoB,EAAE,KAAK,CAAC,CAAC;IACvD,CAAC;IAED,iCAAW,GAAX,UAAY,IAAI;QACd,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;IACtD,CAAC;IAED,iCAAW,GAAX,UAAY,EAAE;QACZ,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,oBAAoB,EAAE,EAAE,CAAC,CAAC;IACpD,CAAC;IA3DH;QAAC,iBAAU,EAAE;;mBAAA;IA6Db,kBAAC;AAAD,CAAC,AA3DD,IA2DC;AA3DY,mBAAW,cA2DvB,CAAA","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\n\n@Injectable()\n\nexport class ViewService {\n  headers = new Headers();\n  viewsApiUrl = '/api/views/';\n  pointsApiUrl = '/api/points/';\n\n  constructor(public http: Http) {}\n\n  private makeRequest(requestURL, object) {\n    var headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n\n    return this.http.post(requestURL, JSON.stringify(object), {headers: headers})\n        .map(response => response.json());\n  }\n\n  getViews() {\n    return this.makeRequest(this.viewsApiUrl, {});\n  }\n\n  getViewsOfProject(id) {\n    return this.makeRequest(this.viewsApiUrl+'read', {projectID: id});\n  }\n\n  setView(point) {\n    return this.makeRequest(this.viewsApiUrl+'create', point);\n  }\n\n  updateView(point, data) {\n    return this.makeRequest(this.viewsApiUrl+'update', data);\n  }\n\n  removeView(id) {\n    return this.makeRequest(this.viewsApiUrl+'delete', id);\n  }\n\n  getPoints() {\n    return this.makeRequest('/api/points', {});\n  }\n\n  closePoint(id) {\n    return this.makeRequest('/api/points/close', id);\n  }\n  \n  openPoint(id) {\n    return this.makeRequest('/api/points/open', id);\n  }\n\n  setPoint(point) {\n    return this.makeRequest('/api/points/create', point);\n  }\n\n  updatePoint(data) {\n    return this.makeRequest('/api/points/update', data);\n  }\n\n  removePoint(id) {\n    return this.makeRequest('/api/points/delete', id);\n  }\n\n}"]}