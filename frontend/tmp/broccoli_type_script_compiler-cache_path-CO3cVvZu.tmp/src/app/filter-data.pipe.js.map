{"version":3,"file":"filter-data.pipe.js","sourceRoot":"","sources":["filter-data.pipe.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAkC,eAAe,CAAC,CAAA;AAgBlD;IAAA;IAsCA,CAAC;IAnCG,8BAAS,GAAT,UAAU,KAAW,EAAE,IAAa,EAAE,UAAU;QAC5C,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC;YAC5B,IAAI,UAAU,GAAG,EAAE,EACf,WAAW,GAAG,EAAE,CAAC;YAGrB,EAAE,CAAC,CAAC,OAAO,UAAU,KAAK,WAAW,IAAI,OAAO,UAAU,CAAC,aAAa,KAAK,WAAW,CAAC,CAAC,CAAC;gBACvF,UAAU,GAAG,UAAU,CAAC,aAAa,CAAC;YAC1C,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,UAAU,GAAG,MAAM,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACtD,CAAC;YAGD,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;gBACpB,WAAW,GAAG,KAAK,CAAC;YACxB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,GAAG,CAAC,CAAa,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK,CAAC;oBAAlB,IAAI,IAAI,cAAA;oBACT,GAAG,CAAC,CAAc,UAAU,EAAV,yBAAU,EAAV,wBAAU,EAAV,IAAU,CAAC;wBAAxB,IAAI,KAAK,mBAAA;wBACV,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,WAAW,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,EAAE,GAAG,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;4BACnI,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;4BACvB,KAAK,CAAC,CAAC,gDAAgD;wBAC3D,CAAC;qBACJ;iBAEJ;YACL,CAAC;YAED,MAAM,CAAC,WAAW,CAAC;QACvB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;IAEL,CAAC;IAlDL;QAAC,WAAI,CAAC;YACF,IAAI,EAAE,YAAY;YAClB,IAAI,EAAE,KAAK;SACd,CAAC;;kBAAA;IAiDF,iBAAC;AAAD,CAAC,AAtCD,IAsCC;AAtCY,kBAAU,aAsCtB,CAAA","sourcesContent":["import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n    name: 'filterData',\n    pure: false\n})\n\n/**\n * Sample of usage:\n * <div class=\"row\" *ngFor=\"let user of (users | filterData: filter.value : {filteredParam: ['login', 'email']})\">\n * This will check if login or email matches\n *\n * or:\n * <div class=\"row\" *ngFor=\"let user of (users | filterData: filter.value)\">\n * This will check all params in objects\n */\nexport class FilterData implements PipeTransform {\n\n\n    transform(items:any[], args:string[], additional):any[] {\n        if (typeof items === 'object') {\n            var paramNames = [],\n                resultArray = [];\n\n\n            if (typeof additional !== 'undefined' && typeof additional.filteredParam !== 'undefined') {\n                paramNames = additional.filteredParam;\n            } else {\n                paramNames = Object.getOwnPropertyNames(items[0]);\n            }\n\n\n            if (args.length === 0) {\n                resultArray = items;\n            } else {\n                for (let item of items) {\n                    for (let param of paramNames) {\n                        if (typeof item[param] !== \"undefined\" && item[param].toString() != null && item[param].toString().match(new RegExp('' + args, 'i'))) {\n                            resultArray.push(item);\n                            break; // if element is added do not add it second time\n                        }\n                    }\n\n                }\n            }\n\n            return resultArray;\n        }\n        else {\n            return null;\n        }\n\n    }\n\n}"]}