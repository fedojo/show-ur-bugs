{"version":3,"file":"point.service.js","sourceRoot":"","sources":["point.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAyB,eAAe,CAAC,CAAA;AACzC,qBAA4B,eAAe,CAAC,CAAA;AAI5C;IAKI,sBAAmB,IAAS;QAAT,SAAI,GAAJ,IAAI,CAAK;QAJ5B,YAAO,GAAG,IAAI,cAAO,EAAE,CAAC;QACxB,WAAM,GAAG,cAAc,CAAC;IAIxB,CAAC;IAEO,kCAAW,GAAnB,UAAoB,UAAU,EAAE,MAAM;QAClC,IAAI,OAAO,GAAG,IAAI,cAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAEnD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;aACxE,GAAG,CAAC,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;IAC1C,CAAC;IAED,gCAAS,GAAT;QACI,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;IAC7C,CAAC;IAED,sCAAe,GAAf,UAAgB,MAAM;QAClB,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,EAAE,EAAC,MAAM,EAAE,MAAM,EAAC,CAAC,CAAC;IACpE,CAAC;IAED,+BAAQ,GAAR,UAAS,KAAK;QACV,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,GAAG,QAAQ,EAAE,KAAK,CAAC,CAAC;IAC3D,CAAC;IAED,kCAAW,GAAX,UAAY,KAAK,EAAE,IAAI;QACnB,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,GAAG,QAAQ,EAAE,IAAI,CAAC,CAAC;IAC1D,CAAC;IAED,kCAAW,GAAX,UAAY,EAAE;QACV,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,GAAG,QAAQ,EAAE,EAAE,CAAC,CAAC;IACxD,CAAC;IApCL;QAAC,iBAAU,EAAE;;oBAAA;IAqCb,mBAAC;AAAD,CAAC,AAnCD,IAmCC;AAnCY,oBAAY,eAmCxB,CAAA","sourcesContent":["import {Injectable} from '@angular/core';\nimport {Http, Headers} from \"@angular/http\";\n\n@Injectable()\n\nexport class PointService {\n    headers = new Headers();\n    apiUrl = '/api/points/';\n\n\n    constructor(public http:Http) {\n    }\n\n    private makeRequest(requestURL, object) {\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n\n        return this.http.post(requestURL, JSON.stringify(object), {headers: headers})\n            .map(response => response.json());\n    }\n\n    getPoints() {\n        return this.makeRequest(this.apiUrl, {});\n    }\n\n    getPointsOfView(viewID) {\n        return this.makeRequest(this.apiUrl + 'read', {viewID: viewID});\n    }\n\n    setPoint(point) {\n        return this.makeRequest(this.apiUrl + 'create', point);\n    }\n\n    updatePoint(point, data) {\n        return this.makeRequest(this.apiUrl + 'update', data);\n    }\n\n    removePoint(id) {\n        return this.makeRequest(this.apiUrl + 'delete', id);\n    }\n}"]}